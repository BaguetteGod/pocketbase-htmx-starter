// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package toast

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "pb-starter/app/components/svgs"

func ToastComponent() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"toast_container\" class=\"z-50 fixed w-full max-w-full md:max-w-96 max-sm:bottom-0 md:right-0 md:top-0 my-10 mx-auto md:mx-8 flex justify-center md:justify-end\" x-data=\"{\n            toasts: [],\n            makeNewToast(toast) {\n                this.toasts.push(toast)\n                setTimeout(() =&gt; {\n                   this.toasts[0].open = true\n                }, 300)\n            },\n            toastEventListener: document.body.addEventListener(&#39;makeToast&#39;, (event) =&gt; {\n                $dispatch(&#39;make:toast&#39;, event?.detail)\n            }),\n            closeToast(index) {\n                this.toasts[index].open = false\n                setTimeout(() =&gt; {\n                    this.toasts.splice(index, 1)\n                }, 300)\n            }\n        }\" x-on:make:toast=\"makeNewToast($event.detail)\"><template x-for=\"(toast, index) in toasts\"><div x-show=\"toast.open\" x-transition:enter=\"ease-out duration-300\" x-transition:enter-start=\"opacity-0 -translate-y-4\" x-transition:enter-end=\"opacity-100 translate-y-0\" x-transition:leave=\"ease-in duration-200\" x-transition:leave-start=\"opacity-100 translate-y-0\" x-transition:leave-end=\"opacity-0 translate-y-4\" class=\"ring-1 ring-opacity-5 ring-black shadow-lg bg-white rounded-lg overflow-hidden max-w-96 w-full\"><div class=\"p-4\"><div class=\"flex items-start\"><div class=\"shrink-0\"><template x-if=\"toast.level === &#39;info&#39;\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = svgs.InformationCircle("h-6 w-6 text-blue-600").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</template><template x-if=\"toast.level === &#39;success&#39;\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = svgs.CheckCirle("h-6 w-6 text-green-600").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</template><template x-if=\"toast.level === &#39;warning&#39;\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = svgs.ExclamationCircle("h-6 w-6 text-orange-600").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</template><template x-if=\"toast.level === &#39;danger&#39;\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = svgs.XCircle("h-6 w-6 text-red-600").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</template></div><div class=\"pt-0.5 flex-1 ml-3\"><p x-text=\"toast.title\" class=\"text-gray-900 font-medium\"></p><p v-if=\"toast.message\" x-text=\"toast.message\" class=\"text-gray-400 mt-1\"></p></div><div class=\"shrink-0 flex ml-4\"><button x-on:click=\"closeToast(index)\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = svgs.X("h-6 w-6 text-gray-400").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</button></div></div></div></div></template></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
