package modals

import "pb-starter/app/components/inputs"

templ GeneralModal(buttonText string) {
	<div
		x-data="{
            modalOpen: false,
            openModal() {
                this.modalOpen = true
            },
            closeModal() {
                this.modalOpen = false
            }
        }"
		class="relative z-50"
		aria-labelledby="modal-title"
		role="dialog"
		aria-modal="true"
	>
		<button
			x-on:click="openModal()"
			type="button"
			class="px-3 py-2 rounded font-medium border border-gray-600 flex items-center justify-center hover:bg-gray-50 w-full"
		>
			{ buttonText }
		</button>
		<template x-if="true">
			<div
				x-ref="modalBackdrop"
				x-show="modalOpen"
				x-transition:enter="ease-out duration-300"
				x-transition:enter-start="opacity-0"
				x-transition:enter-end="opacity-100"
				x-transition:leave="ease-in duration-200"
				x-transition:leave-start="opacity-100"
				x-transition:leave-end="opacity-0"
				class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"
				aria-hidden="true"
			></div>
		</template>
		<template x-if="true">
			<div x-ref="modalContainer" x-show="modalOpen" class="fixed inset-0 z-50 w-screen overflow-y-auto">
				<div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
					<div
						x-ref="modalContent"
						x-show="modalOpen"
						x-on:click.outside="closeModal()"
						x-transition:enter="ease-out duration-300"
						x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
						x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
						x-transition:leave="ease-in duration-200"
						x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
						x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
						class="relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 w-full max-w-lg"
					>
						{ children... }
					</div>
				</div>
			</div>
		</template>
	</div>
}

templ ModalContentWrapper() {
	<div class="bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4">
		{ children... }
	</div>
}

templ ModalButtonsWrapper() {
	<div class="bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6 gap-3">
		{ children... }
	</div>
}

templ CloseModalButton() {
	<button
		x-on:click="closeModal()"
		type="button"
		class={ inputs.ButtonOutlineGrayClasses + " mt-3 md:mt-0" }
	>Cancel</button>
}
